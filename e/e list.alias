tembed -thumb <image> -color <color>
<drac2>
#DONE: update to only user local and server libraries
me, settingsCVAR, setting, currentSetting = character(), "ExploreSettings", {}, ""
returnstr = f' -title "Exploration Alias!" -desc "Listing all available Settings:"'
# checks for exisiting cvar/svars and settings
hasServerLib = get_svar("serverexplorelibrary", False)
hasLocalLib = get("explorelibrary", False)

# need to check if they are valid GVARs
if hasServerLib:
    hasServerLib = hasServerLib if (len(hasServerLib) == 36 and hasServerLib.count("-") == 4) else False
if hasLocalLib:
    hasLocalLib = hasLocalLib if (len(hasLocalLib) == 36 and hasLocalLib.count("-") == 4) else False

# if noone have a good GVAR, just load the default one
if not hasLocalLib and not hasServerLib:
    returnstr += f' -f "NO SETTINGS|Loading the Default GVAR"'
    me.set_cvar_nx("explorelibrary", "6e7a3d5d-9261-435a-9944-c82ce243b4d4")
    hasLocalLib = get("explorelibrary")

if hasLocalLib:
    loadedLocalLibrary = load_json(get_gvar(hasLocalLib))
    returnstr += f' -f " -- LOCAL LIBRARY --| '
    for savedSetting in loadedLocalLibrary.keys():
        returnstr += f'**{savedSetting}**:\n\u039E\u039E\u039E {loadedLocalLibrary[savedSetting]["description"]}\n '
    returnstr += f'"'

if hasServerLib:
    loadedServerLibrary = load_json(get_gvar(hasServerLib))
    returnstr += f' -f " -- SERVER LIBRARY --| '
    for savedSetting in loadedServerLibrary.keys():
        returnstr += f'**{savedSetting}**:\n\u039E\u039E\u039E  {loadedServerLibrary[savedSetting]["description"]}\n '
    returnstr += f'"'
#
# cvarData = get("library", False)
# svarPointer= get_svar("serverlibrary", "")
#
# if hasSettings:
#     loadedSetting = load_json(hasSettings)
#     currentSetting = loadedSetting["setting"]
# # gets the keys in all the cvars, aliases, and svars
# if cvarData:
# # now determine if its a JSON or a gvar
#     if len(cvarData) == 36 and cvarData.count("-") == 4:
#     # this means cvarDATA has a GVAR
#         libraryData = load_json(get_gvar(cvarData))
#         returnstr += f' -f " -- PUBLIC LIBRARY --| '
#     else:
#     # this means cvarDATA has a CVAR
#         libraryData = load_json(get(cvarData))
#         returnstr += f' -f " -- PRIVATE LIBRARY --| '
#     for savedsetting in libraryData.keys():
#         returnstr += f'**{savedsetting}**:\n\u039E\u039E\u039E {libraryData[savedsetting]["description"]}{" **<- You are here**" if currentSetting == savedsetting else ""}\n '
#     returnstr += f'"'
#
# #this means its an svar pointer to JSON in a gvar
# if svarPointer != "":
#     serverLibraryData = load_json(get_gvar(svarPointer))
#     returnstr += f' -f " -- SERVER LIBRARY --| '
#     for savedsetting in serverLibraryData.keys():
#         returnstr += f'**{savedsetting}**:\n\u039E\u039E\u039E  {serverLibraryData[savedsetting]["description"]}{" **<- You are here**" if currentSetting == savedsetting else ""}\n '
#     returnstr += f'"'
# builds the footer
returnstr += f' -footer "!e list\n'\
             f'To view the Help Page\n'\
             f'!help e list"'
return returnstr
</drac2>