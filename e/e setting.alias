tembed -thumb <image> -color <color>
<drac2>
#DONE: Remove PUBLIC, PRIVATE libraries. Just use one single CVAR library for holding ExploreSettings. This should work with SVAR too.
pargs, me  = argparse(&ARGS&), character()
settings = {"setting": "","type":"","dm": "","prereqs": [],"monsters": [],"traps": []}
returnstr = f' -title "Exploration Alias!" -desc "Updating your current Setting:"'
savestr = ""
setLocal = True if pargs.get("local") else False

# if you are setting a new GVAR as local library
if setLocal:
    localGVAR = pargs.last("local")
    # check to see if its a valid GVAR
    if len(localGVAR) == 36 and localGVAR.count("-") == 4:
        me.set_cvar("explorelibrary", localGVAR)
        savestr += f' -f "Library Update|Your Local Library has been updated to a new GVAR. To list available settings in the library use `!e list`"'
    else:
        err("The GVAR you provided seems to be wrong. Check again.")

# runs the booleans
hasServerLib = get_svar("serverexplorelibrary", False)
hasLocalLib = get("explorelibrary", False)

# checks to see if its a server or local library, and loads it into loadedSettings. changes settings dict to reflect where to look
if hasLocalLib:
    if len(hasLocalLib) == 36 and hasLocalLib.count("-") == 4:
        loadedLibrary = load_json(get_gvar(hasLocalLib))
        settings.update({"type": "local"})
elif hasServerLib:
    if len(hasServerLib) == 36 and hasServerLib.count("-") == 4:
        loadedLibrary = load_json(get_gvar(hasServerLib))
        settings.update({"type":"server"})
else:
    me.set_cvar_nx("explorelibrary", "6e7a3d5d-9261-435a-9944-c82ce243b4d4")
    loadedSettings = load_json(get_gvar(explorelibrary))
    settings.update({"type": "local"})
    me.set_cvar("ExploreSettings", dump_json(settings))
    returnstr += f' -f "DEFAULTS | No libraries were found, loaded the deafault on in your `explorelibrary` CVAR" '

# if you pass just setting
if "&*&" != "" and not setLocal:
    selectedSetting = "&*&".lower()
    # gonna iterate through loaded library for a setting
    for setting in loadedLibrary.keys():
        if selectedSetting in setting.lower():
            settings.update({"setting": setting, "position": "begin", "dm":ctx.author.name})
            me.set_cvar("ExploreSettings", dump_json(settings))
            savestr += f' -f "Setting Update|Your setting is now `{setting}` in the `{settings["type"].capitalize()}` Library"'
            savestr += f' -f "Additional Instructions|{loadedLibrary[setting]["instructions"]}"'
            break
    if savestr == "":
        savestr += f' -f "Setting Error|That setting was not found in any library. Make sure you have already loaded the library\n\n Also Also, check `!e list` to see whats available"'

returnstr += savestr
returnstr += f' -footer "!e setting \\"setting name\\" to set a specific loaded setting from your library\n' \
             f'!e setting -local GVAR-ID to set a public GVAR library\n' \
             f'!svar serverlibrary GVAR-ID to set the server library (must be DragonSpeaker or Admin)"'

return returnstr
</drac2>