tembed
<drac2>
#set primary variables
parsedArgs, hasMentor, mentorStr, mentor, returnStr, me = argparse(&ARGS&), False, "", "", "", character()
# if set is ran without arguments
if not &ARGS&:
  return f' -title "{me.name} attempts to set a learning activity" -desc "You didn\'t provide any arguments" -f "Usage| `!dt learn set -lang \\"Language\\" [-mentor \\"Mentor\\"]` "'
# checks for mentor and stores info
if parsedArgs.get("mentor"):
  mentor =  parsedArgs.last("mentor")
  hasMentor = True
  mentorStr += f' -f "Mentor|{me.name} has chosen `{mentor}` as their Mentor." '
else:
  mentor = "none"
# does the math for downtimes required
totalDowntimesRequired = ceil(200 - (((me.stats.intelligence*2)-20)*10))
totalDowntimesRequired = 80 if totalDowntimesRequired < 80 else totalDowntimesRequired

# checks for language set and stores into cvar
knownLanguages = get("languages") if exists("languages") else ""
if parsedArgs.get("lang"):
  language = parsedArgs.last("lang")
  ccName = f'DT Learn-Language-{language}'
  if language.lower() in knownLanguages.lower():
    return f' -title "{me.name} attempts to set a learning activity" -desc "You already know this one!" -f "Usage| `!dt learn set -lang \\"Language\\" [-mentor \\"Mentor\\"]` "'

# does the math for number of Downtimes required
  if hasMentor:
    totalDowntimesRequired = floor(totalDowntimesRequired / 2)

returnStr += f' -title "{name} sets their learning to language" -desc "You can now start learning `{language}`" ' \
                  f' -f "Usage| You can now set start rolling for it \n`!dt learn -lang {language}` " '
saveInfo = (language, mentor, ccName, "False")
me.set_cvar("DTLearnLang",",".join(saveInfo))
me.create_cc(ccName, "0", str(totalDowntimesRequired), 'none')
me.set_cc(ccName, 0)
returnStr += mentorStr
return returnStr


</drac2>
