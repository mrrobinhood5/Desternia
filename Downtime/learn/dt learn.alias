tembed -title "Learning Downtime"
<drac2>
# defines primary variables
pArgs, helpstr, returnstr, me = argparse(&ARGS&), "", "", character()
#defines secondary variables
rr = 2 if not pArgs.get("part") else 1
# defines the roll strings
rollstr = ['1d20+', '2d20kh1+', '3d20kh1+', '2d20kl1+'][pArgs.adv()]

# defines the help string
helpstr += f' -desc "You can spend your time learning new skills, languages, and tools. You can do so **with** or **without** a mentor.' \
           f' Ability for learning is **Intelligence**"' \
           f' -f "LEARNING|```200 - ((( INT x 2 ) - 20) x 10) = Total Number of Downtimes (minimum of 20) ```' \
           f' - If you train with a mentor, you can **HALF** that number (rounded up) \n ' \
           f' - You can only do Learning for 2 DT per day rolling with a DC 10 **Intelligence** check \n'\
           f' - Training Cost is 1 gp per day, regardless of how many checks you passed or if you used 1 or 2 DT \n' \
           f' - You have 6 Learning Slots. Languages take up 1 Slot, Tools take up 2 Slots, Feats take up 3 Slots" ' \
           f' -f "EXAMPLE|```You are a commoner with 12 INT and wants to learn Elvish from a Wood Elf mentor, twice a day.\n' \
           f' Multiply 12 (INT) by 2 = 24\n' \
           f' Subtract 20 from 24 = 4\n' \
           f' Multiply 4 by 10 = 40\n' \
           f' Subtract 40 from 200 = 160 Downtimes (80 full days, 80gp minimum)\n' \
           f' Since you have a mentor:\n' \
           f' 160 divided by 4 = 40 Downtimes (20 full Days, 20gp minimum)\n' \
           f' Doing it twice a day:\n' \
           f' 40 divided by 2 = 20 Days (minimum) and 20gp (minimum)```"' \
           f' -f "SETUP|```!dt learn set -lang \\"Language\\" -mentor \\"Mentor Name\\" ``` \n ' \
           f' **Running Setup after starting training will result in progress to reset**"' \
           f' -f "USAGE|```!dt learn -lang \"Language\" [part]```"'

# error checks #TODO Add error check to see if there is any downtime left for the day
if not &ARGS&:
    return helpstr
#set up the info into the cvar
if pArgs.get("lang"):
    language, mentor, ccName = get("DTLearnLang").split(",")
    hasMentor = False if mentor == "none" else True
    returnstr += f' -desc "Learning Language: {language} {"mentored by "+mentor if hasMentor else "all alone"} "'
    learnMod = me.skills.intelligence.value
#does the rolls
for myroll in range(rr):
    attempt = vroll(rollstr+learnMod)
    passDC = True if vroll.total >= 10 else False
    returnstr += f' -f "Roll #{myroll+1}|{attempt}\n{"Passed +1" if passDC else "No Progress"}" '

returnstr += f' -f "Progress|{me.cc_str(ccName)}" '
return returnstr
</drac2>