embed -title "Crime Downtime" -thumb <image> -color <color>
<drac2>
me, returnstr = character(), ""
# first roll is investigation or perception, whatever is higher.
if me.skills.perception.value > me.skills.investigation.value:
    scoutSkill = "perception"
    scoutRoll = me.skills.perception.d20()
else:
    scoutSkill = "investigation"
    scoutRoll = me.skills.investigation.d20()
scoutResult = vroll(scoutRoll)
#checks for a pass and sets the multipler for gains
multipliers = [3,2,1,.5,.2,0]
minrolls = [20,18,15,12,10,0]
targets = ["noble","upperclass","middle class","commoner","poor","failed to find anyone"]
pointer = 0
for x in minrolls:
    if scoutResult.total > x:
        earnMultiplier = multipliers[pointer]
        crimeTarget = targets[pointer]
        break
    else:
        pointer += 1
returnstr += f' -f "Scouting Roll|*{scoutSkill.title()}*\n{scoutResult.full}\n`{crimeTarget.title()}` for a multiplier of `{earnMultiplier}`"'

# next rolls for Hidden Roll
if earnMultiplier == 0:
    returnstr += f' -f "Hidden Roll| None, you didn\'t find anyone"'
else:
    # sets the DC for this roll
    hiddenRollDC = vroll(f'2d10+{floor(level/2)}')
    #checks for a Disguise Kit in your bag
    hiddenRoll = me.skills.stealth.d20(True) if "disguise" in bags.lower() else me.skills.stealth.d20()
    hiddenResult = vroll(hiddenRoll)
    hiddenPass = True if hiddenResult.total >= hiddenRollDC.total else False
    returnstr += f' -f "Hidden Roll|*Stealth*\nDC: {hiddenRollDC.full}\n{hiddenResult.full}\n{"**PASS**" if hiddenPass else "**FAIL**"}"'

# next rolls for Sleight of Hand
if earnMultiplier == 0 or hiddenPass == False:
    returnstr += f' -f "Stealing Roll| Nobody to Steal from!"'
else:
    stealRollDC = vroll(f'2d10+{floor(level/2)}')
    # checks for thieves tools
    stealRoll = me.skills.sleightOfHand.d20(True) if "thieve" in bags.lower() else me.skills.sleightOfHand.d20()
    stealResult = vroll(stealRoll)
    stealPass = True if stealResult.total >= stealRollDC.total else False
    returnstr += f' -f "Steal Roll|*Sleight of Hand*\nDC: {stealRollDC.full}\n{stealResult.full}\n{"**PASS**" if stealPass else "**FAIL**"}"'

#calculate gains
# open up your coin purse
bagsLoaded=load_json(bags) #load the bags
pouch=([x for x in bagsLoaded if x[0]=="Coin Pouch"])[0] #load the coinpouch
ogp = pouch[1]['gp'] # what gp was before?

if earnMultiplier == 0 or hiddenPass == False or stealPass == False:
    returnstr += f' -f "Earnings|You have not earned anything. This encounter cost you `2 gp`\n'
    ngp = ogp-2
else:
    coinsEarned = 2 + (2*earnMultiplier)
    ngp = ogp + coinsEarned
returnstr += f'`{ogp}` gp -> `{ngp}` gp"'
pouch[1].update({'gp':ngp}) #updates new quantities locally
pouch in bagsLoaded or bagsLoaded.append(pouch)
me.set_cvar("bags",dump_json(bagsLoaded)) #dumps the coins back to the cvar

return returnstr

</drac2>