tembed -thumb "<image>" -color "<color>" -title "Carousing - <name>" -footer "Downtime options - !help dt"
<drac2>
# add time check

# vars
me = character()
default_cvar_dtv2 = "{}"
has_adv = None
returnstr = ""
renownstr = ""
scoutstr = ' -f "Scout Roll|'
resultstr = ' -f "Results|'
errstr = f' -f "Alert| You have already started a carousing week. You cannot reset it because you are rolling bad. Boo hoo"'

#channel check
if str(ctx.channel.id) not in "746529962361749594, 773790279530184714":
  return f' -desc "BUT! You are in the wrong channel" -f "Fix|Go do your work downtime in the #downtime channel"'

# check to see if you have new downtime cvars
me.set_cvar_nx("DTv2", default_cvar_dtv2)

# load the json
dt_cvar_data = load_json(DTv2)
if "carousing" not in dt_cvar_data.keys():
    dt_cvar_data.update({"carousing":{}})

# check to see if you are in the middle of a carousing
day = dt_cvar_data["carousing"].get("day")
if day and day > 1:
    return errstr

# get current renown
if "renown" in dt_cvar_data.keys():
    my_renown = dt_cvar_data["renown"]
else:
    dt_cvar_data.update({"renown":0})
    my_renown = 0


# use renown to build the rolls
renownstr += f' -f "Renown: {my_renown}|'
if 10 <= my_renown < 25:
    renownstr += f'You have 10% chance to gain advantage. '
    if randint(1,11) == 1:
        has_adv = True
        renownstr += f'`ADV gained`'
    else:
        renownstr += f'`no ADV`'
elif my_renown >= 25:
    renownstr += f'You have 25% chance to gain advantage. '
    if randint(1,5) == 1:
        has_adv = True
        renownstr += f'`ADV gained`'
    else:
        renownstr += f'`no ADV`'
else:
    renownstr += f'You dont get any renown perks.'
renownstr += '"'

# choose which is the best to roll
if me.skills.perception.value > me.skills.investigation.value:
    scout_roll = vroll(me.skills.perception.d20(base_adv=has_adv))
    scoutstr += f'**Perception**: {scout_roll.full}'
else:
    scout_roll = vroll(me.skills.investigation.d20(base_adv=has_adv))
    scoutstr += f'**Investigation**: {scout_roll.full}'
scoutstr += '"'

# build results
if scout_roll.total < 10:
    resultstr += 'You cannot find anyone to party with. Try again tomorrow."'
    dt_cvar_data['carousing'].update({"cost": 0, "friends": "None"})
elif 10 <= scout_roll.total < 15:
    # Poor / modest
    resultstr += f'You found a group of `Poor/Modest` people to party with. It costs `1gp x Level` to party with them.' \
                 '\n Start with `!dt carousing`"'
    dt_cvar_data['carousing'].update({"cost": 3*me.levels.total_level, "friends": "Poor/Modest", "bonus": 5})
elif 15 <= scout_roll.total < 20:
    # wealthy
    resultstr += f'You found a group of `Wealthy` people to party with. It costs `3gp x Level` to party with them'\
                 '\n Start with `!dt carousing`"'
    dt_cvar_data['carousing'].update({"cost": 3 * me.levels.total_level, "friends": "Wealthy", "bonus": 15})
elif scout_roll.total >= 20:
    # aristocratic
    resultstr += f'You found a group of `Aristocratic` people to party with. It costs `5gp x Level` to party with them'\
                 '\n Start with `!dt carousing`"'
    dt_cvar_data['carousing'].update({"cost": 5 * me.levels.total_level, "friends": "Aristocratic", "bonus": 25})

# save the current options
dt_cvar_data['carousing'].update({"running": 0, "day": 1})
me.set_cvar("DTv2", dump_json(dt_cvar_data))

#build the embed
returnstr += f'{renownstr}{scoutstr}{resultstr}'
return returnstr
</drac2>