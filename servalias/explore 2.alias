tembed -thumb <image> -color <color>
<drac2>
# from Desternia.FakeTestingStuff import *
# TODO: if you give it a non existing position, it still saves it to settings then errors out next time
# TODO: prereqs are being added multiple times
# TODO: fisher is not being added to prereqs
# TODO: need to make choices lowercase fuzzy search
# sets default variables
me, settingsCVAR= character(), "ExploreSettings"
returnstr = ""
isAllowed, isBar, validNextPosition = True, False, False
defaultSettings = {"setting" : "Small Town","type" : "public", "position" : "begin","prereqs" : []}

# checks to see if there are settings, otherwise set the default ones
hasSettings = get(settingsCVAR, False)
me.set_cvar_nx("library", "6e7a3d5d-9261-435a-9944-c82ce243b4d4")

# if no settings exists, load the default ones
if not hasSettings:
    me.set_cvar(settingsCVAR, dump_json(defaultSettings))
    hasSettings = get(settingsCVAR)

# load ExploreSettings CVAR
savedExploreSettings = load_json(hasSettings)
savedSetting, savedPosition, savedType, savedEarns = savedExploreSettings["setting"], savedExploreSettings["position"], savedExploreSettings["type"], savedExploreSettings["prereqs"]

# checks to see what kind of settings is saved and loads it
if savedType == "public":
    loadedData = load_json(get_gvar(get("library")))
if savedType == "private":
    cvarData = get("library")
    loadedData = load_json(get(cvarData))
if savedType == "server":
    loadedData = load_json(get_gvar(get_svar("serverlibrary")))
loadedSetting = loadedData[savedSetting]
loadedPosition = loadedSetting[savedPosition]
loadedChoices = loadedPosition["choices"]

# MAIN LOGIC !!

# checks to see if you provided a good and valid Next Position from the choices of your current position and loads it.
typedPosition = "&*&"
if typedPosition != "":
    validNextPosition = True if typedPosition.lower() in str(loadedChoices).lower() else False

    # loads the nextPosition as current, and pulls all its data
    if validNextPosition:
        for position in loadedChoices:
            nextPosition = loadedSetting[position] if typedPosition.lower() in position.lower() else loadedSetting[savedPosition]
            savedExploreSettings.update({"position":position})
        returnstr += f' -title "{savedSetting}: {position} " '
    else:
        # not sure what this does
        nextPosition = loadedSetting[savedPosition]
        savedExploreSettings.update({"position": savedPosition})
        returnstr += f' -f "Error|Not a valid choice" '

    ## Check to see if you are Bar from this Position
    if "not" in nextPosition.keys() and validNextPosition:
        isBar = True if any(item in savedEarns for item in nextPosition["not"]) else False
        savedExploreSettings.update({"position": savedPosition})
        returnstr += f' -f "Error| You are barred from this location" ' if isBar else f''

    ## check to see if you have the requirments for this new location
    if "prereqs" in nextPosition.keys() and validNextPosition:
        isAllowed = True if any(item in savedEarns for item in nextPosition["prereqs"]) else False
        savedExploreSettings.update({"position": savedPosition})
        returnstr += f' -f "Error| You do not have the requirements for this location" ' if not isAllowed else f''

    ## check to see if you have new earns because you are allowed
    if isAllowed and not isBar and validNextPosition:
        # add the earns allowed in nextPosition to the savedEarns to save later
        if "earns" in nextPosition.keys():
            for x in nextPosition["earns"]:
                if x not in savedEarns:
                    savedEarns.append(x)
                    savedExploreSettings.update({"prereqs": savedEarns})
    # writes all new data to CVAR
    me.set_cvar(settingsCVAR, dump_json(savedExploreSettings))
    # builds the embed for the choice you made
    returnstr += f' -f "Description|{nextPosition["description"]}"'
    returnstr += f' -f "Choices|{nextPosition["choices"]}"'

else:
    #builds the embed for the old setting
    returnstr += f' -title "{savedSetting+": "+savedPosition}" '
    returnstr += f' -f "Description|{loadedPosition["description"]}" \n'
    returnstr += f' -f "Choices|{loadedChoices}" \n'
# sets the footer
returnstr += f' -footer "!explore area name to move to another area \n' \
             f'!explore setting|set \\"Setting Name\\" to enter a different setting \n'\
             f'!explore list to view a list of available settings"'
return returnstr
</drac2>