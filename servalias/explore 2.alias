from Desternia.FakeTestingStuff import *

tembed -thumb <image> -color <color>
<drac2>

# sets default variables
me, settingsCVAR= character(), "ExploreSettings"
returnstr, setMessage = "", False
isAllowed, isBar, validNextPosition = True, False, False
defaultSettings = {"setting" : "Small Town","type" : "public", "position" : "begin","prereqs" : []}

# checks to see if there are settings, otherwise set the default ones
hasSettings = get(settingsCVAR, False)
me.set_cvar_nx("library", "6e7a3d5d-9261-435a-9944-c82ce243b4d4")

# if no settings exists, load the default ones
if not hasSettings:
    me.set_cvar(settingsCVAR, dump_json(defaultSettings))
    hasSettings = get(settingsCVAR)

# load ExploreSettings CVAR
savedExploreSettings = load_json(hasSettings)
savedSetting, savedPosition, savedType, savedEarns = savedExploreSettings["setting"], savedExploreSettings["position"], savedExploreSettings["type"], savedExploreSettings["prereqs"]

# checks to see what kind of settings is saved and loads it
if savedType == "public":
    loadedData = load_json(get_gvar(get("library")))
if savedType == "private":
    cvarData = get("library")
    loadedData = load_json(get(cvarData))
if savedType == "server":
    loadedData = load_json(get_gvar(get_svar("serverlibrary")))
loadedSetting = loadedData[savedSetting]
loadedPosition = loadedSetting[savedPosition]
loadedChoices = loadedPosition["choices"]

# MAIN LOGIC !!

# checks to see if you provided a good and valid Next Position from the choices of your current position and loads it.
nextPosition = "&*&"
if nextPosition != "":
    validNextPosition = True if nextPosition in loadedChoices else False

    # loads the nextPosition as current, and pulls all its data
    nextPosition = loadedSetting[nextPosition] if validNextPosition else loadedPosition
    returnstr += f' -f "Error|Not a valid choice" ' if not validNextPosition else f''

    ## Check to see if you are Bar from this Position
    if "not" in nextPosition.keys():
        isBar = True if any(item in savedEarns for item in nextPosition["not"]) else False
        returnstr += f' -f "Error| You are barred from this location" ' if isBar else f''

    ## check to see if you have the requirments for this new location
    if "prereqs" in nextPosition.keys():
        isAllowed = True if any(item in savedEarns for item in nextPosition["prereqs"]) else False
        returnstr += f' -f "Error| You do not have the requirements for this location" ' if not isAllowed else f''

    ## check to see if you have new earns because you are allowed
    if isAllowed and not isBar:
        # add the earns allowed in nextPosition to the savedEarns to save later
        if "earns" in nextPosition.keys():
            savedEarns.append(nextPosition["earns"])
        # writes all new data to CVAR
        savedExploreSettings.update({"position":list(nextPosition)[1], "prereqs":savedEarns})
        me.set_cvar(settingsCVAR, dump_json(savedExploreSettings))
    returnstr += f' -f "Description|{nextPosition["description"]}"'
    returnstr += f' -f "Choices|{nextPosition["choices"]}"'
#Outputs the tembed
# sets the title
# returnstr += f' -title "{loadedSetting+": "+savedExploreSettings["position"] if validNextPosition else "Exploration Alias!"}'
returnstr += f' -title "Explore Alias!" -desc "This appears when you didnt pass any arguments" -f "GPS|You are here ^^" '
# sets the footer
returnstr += f' -footer "`!explore area name` to move to another area \n ' \
             f'`!explore setting|set \\"Setting Name\\"` to enter a different setting \n '\
             f'`!explore list` to view a list of available settings"'
return returnstr
</drac2>